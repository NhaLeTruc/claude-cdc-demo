[tool.poetry]
name = "postgres-cdc-demo"
version = "0.1.0"
description = "Comprehensive CDC demonstration for Postgres, MySQL, DeltaLake, and Iceberg"
authors = ["CDC Demo Team"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
# CDC and Streaming
kafka-python = "^2.0.2"
confluent-kafka = {extras = ["avro", "schema-registry"], version = "^2.3.0"}
# Database Drivers
psycopg2-binary = "^2.9.9"
pymysql = "^1.1.0"
mysql-connector-python = "^8.0.33"
# Lakehouse
pyspark = "^3.5.0"
delta-spark = "^3.3.2"
pyiceberg = {extras = ["s3fs", "hive"], version = "^0.10.0"}
pyarrow = "^14.0.0"
# Data Generation
faker = "^20.0.0"
# CLI
click = "^8.1.7"
rich = "^13.7.0"
# Observability
prometheus-client = "^0.19.0"
# Configuration
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
# Utilities
httpx = "^0.25.2"
pyyaml = "^6.0.1"
numpy = "<2"
minio = "^7.2.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
# pytest-docker-compose = "^3.2.1"  # Removed due to dependency conflicts with python-dotenv and PyYAML
testcontainers = "^3.7.1"
# Code Quality
black = "^23.12.0"
ruff = "^0.1.8"
mypy = "^1.7.1"
# Type Stubs
types-pyyaml = "^6.0.12"

[tool.poetry.scripts]
cdc-demo = "src.cli.main:cli"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "kafka.*",
    "pyspark.*",
    "delta.*",
    "pyiceberg.*",
    "testcontainers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=html --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "data_quality: Data quality tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
